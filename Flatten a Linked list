
// } Driver Code Ends


/*Node class  used in the program
class Node
{
	int data;
	Node next;
	Node bottom;
	
	Node(int d)
	{
		data = d;
		next = null;
		bottom = null;
	}
}
*/
/*  Function which returns the  root of 
    the flattened linked list. */
class GfG
{
    Node mergeTwo(Node a1, Node b1){
        Node temp = new Node(0);
        Node res = temp;
        
        while(a1!=null && b1!=null){
            if(a1.data<b1.data){
                temp.bottom = a1;
                a1 = a1.bottom;
                temp = temp.bottom;
            }
            
            else{
                temp.bottom = b1;
                b1= b1.bottom;
                temp = temp.bottom;
            }
            
           
        }
         if(a1!=null)
            temp.bottom = a1;
            
            else
            temp.bottom = b1;
            
            return res.bottom;
    }
    Node flatten(Node root)
    {
	// Your code here
	if(root== null || root.next == null)
	return root;
	
	root.next= flatten(root.next);
	
	root = mergeTwo(root,root.next);
	return root;
    }
}
